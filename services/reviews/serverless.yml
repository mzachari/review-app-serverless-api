service: review-app-mvp-api-reviews

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack

custom:
  stage: ${self:provider.stage}
  awsAccountId:
    stage: '075597226000'
    dev:   '075597226000'

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region,'ap-south-1'}
  profile: ${opt:profile, 'staginghta'}
  versionFunctions: false
  environment:
    reviewTable: ${self:provider.stage}-reviews
    connectionTable: ${self:provider.stage}-connection
    WEBSOCKET_API_ENDPOINT: !Join ['', ['https://', !Ref WebsocketsApi, '.execute-api.', '${opt:region, self:provider.region}', '.amazonaws.com/', '${opt:stage, self:provider.stage}/']]
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
    

  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: arn:aws:dynamodb:${self:provider.region}:${self:custom.awsAccountId.${self:custom.stage}}:table/${self:provider.environment.reviewTable}
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: arn:aws:dynamodb:${self:provider.region}:${self:custom.awsAccountId.${self:custom.stage}}:table/${self:provider.environment.connectionTable}
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
    Resource: arn:aws:dynamodb:${self:provider.region}:${self:custom.awsAccountId.${self:custom.stage}}:table/${self:provider.environment.reviewTable}/index/*
functions:
  getProductReviews:
    handler: reviewController.getProductReviews
    memorySize : 256
    events:
      - http:
          path: 'reviews/{productId}'
          method: get
          cors: true
  addProductReview:
    handler: reviewController.addProductReview
    memorySize : 256
    events:
      - http:
          path: 'reviews/{productId}'
          method: post
          cors: true
  defaultSocketHandler:
    handler: reviewController.defaultSocketHandler
    memorySize: 512
    events:
      - websocket:
          route: $default
  handleSocketConnect:
    handler: reviewController.handleSocketConnect
    events:
      - websocket:
          route: $connect
  handleSocketDisconnect:
    handler: reviewController.handleSocketDisconnect
    events:
      - websocket:
          route: $disconnect